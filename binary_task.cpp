#include <iostream>
using namespace std;
// во время решения использовал нумерацию бит справа налево, начиная с 0
int main()
{
    setlocale(LC_ALL,"RUS"); // для вывода русского текста
    short n, i;
    cout << "Введите n и i\n";
    cin >> n >> i;
    cout << (1 << i) << "\n"; // - число вида 2^i. (1<<i) смещает единицу в бинарной записи числа на i шагов влево, так получаем нужное число: (1<<4) делает из 00001 число 10000 = 2^4
    cout << ((1 << i) | n) << "\n"; // - i-ый бит будет 1 (см строку 9), а поразрядная дизъюнкция гарантирует, что число в двоичной записи будет как n, но с гарантированной \
    1 в i-ом разряде. ((1 << i) | n) при i = 4 и n = 5 сделает следующее: 00001 -> 10000 -> 10101 (5 = 101)
    cout << ((~ (1 << i)) & n) << "\n"; // - i-ый бит будет 1 (см строку 9), потом число будет инвертированно, все цифры будут 1, за исключением нужного разряда.\
    тогда при поразрядной конъюнкции мы гарантированно избавимся от 1 в i-ом разряде числа n. При n = 10101 (21) и i = 4, сначала получим 10000 ~= 01111 &= 00101
    cout << ((1 << i) ^ n) << "\n"; // - i-ый бит будет 1 (см строку 9), потом поразрядное исключающее или заменит нужный нам символ, так как 1 ^ 1 = 0 и 1 ^ 0 = 1.\
    при n = 10101 (21) и i = 4, получим 10000 ^ 10101 = 00101
    (n & 1)? cout << "Число n нечетное": cout << "Число n четное"; // за четность отвечает нулевой бит (так как 2^0 = 1), тогда проверяя его конъюнкцией с 1, в случае 1 \
    число нечетное, в случае 0 число четное
    return 0;
}